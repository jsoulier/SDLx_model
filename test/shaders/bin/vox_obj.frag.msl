#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformLight
{
    float4 Light;
};

struct main0_out
{
    float4 out_var_SV_Target [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
    float3 in_var_TEXCOORD1 [[user(locn1)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_UniformLight& UniformLight [[buffer(0)]], texture2d<float> PaletteTexture [[texture(0)]], sampler PaletteSampler [[sampler(0)]])
{
    main0_out out = {};
    out.out_var_SV_Target = PaletteTexture.sample(PaletteSampler, in.in_var_TEXCOORD0) * (fast::clamp(dot(in.in_var_TEXCOORD1, -UniformLight.Light.xyz), 0.0, 1.0) + UniformLight.Light.w);
    return out;
}

